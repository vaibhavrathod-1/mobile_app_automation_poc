name: Flutter

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  dependency-setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v3  # Add cache for Flutter dependencies
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get

  android-build:
    needs: dependency-setup
    runs-on: c
    steps:
      - uses: actions/checkout@v1
      - name: Restore cache for Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'
        continue-on-error: true
      - name: Build android apk and appBundle
        run: |
          flutter build appbundle --release
          ls -R
      - uses: actions/upload-artifact@v4
        with:
          name: android-app
          path: build/app/outputs/flutter-apk/app-release.apk

  ios-build:
    needs: dependency-setup
    runs-on: macos-latest  # Switch to macOS for iOS build
    steps:
      - uses: actions/checkout@v1
      - name: Restore cache for Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Build ios
        run: |
          flutter build ios --release --no-codesign
      - uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: build/ios/iphoneos/Runner.ipa

      # - name: Upload artifact to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: "<app_id>"
      #     serviceCredentialsFileContent: ${{secrets.ANDROID_FILE_CONTENT}}
      #     groups: testers
      #     file: build/app/outputs/bundle/release/app-release.aab 


      #     register an app in google play consolse --> firebase --> app
    